@{
    ViewData["Title"] = "Login";
}

<div class="d-flex justify-content-center align-items-center vh-100 bg-gradient position-relative">
    <div class="card shadow-lg border-0 rounded-4 p-5 glass-card" style="max-width: 420px; width: 100%;">
        <div class="text-center mb-4">
            <div class="mb-3">
                <i class="bi bi-shield-lock-fill text-primary" style="font-size: 3rem;"></i>
            </div>
            <h3 class="fw-bold text-dark mb-1">AB SOLUTION PVT LTD</h3>
            <p class="text-secondary">Secure Login Portal</p>
        </div>

        <form method="post" class="needs-validation" novalidate>
            <div class="mb-3">
                <label class="form-label fw-semibold text-dark">Username</label>
                <select name="username" class="form-select form-control-lg" required>
                    <option value="">-- Select User --</option>
                    @foreach (var user in (IEnumerable<string>)ViewBag.Users)
                    {
                        <option value="@user">@user</option>
                    }
                </select>
                <div class="invalid-feedback">Please select your username.</div>
            </div>

            <div class="mb-3">
                <label class="form-label fw-semibold text-dark">Password</label>
                <div class="input-group input-group-lg">
                    <input type="password" name="password" class="form-control" id="passwordInput" placeholder="Enter password" required />
                    <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                        <i class="bi bi-eye"></i>
                    </button>
                    <div class="invalid-feedback">Password is required.</div>
                </div>
            </div>

            <button type="submit" class="btn btn-gradient w-100 py-2 fw-semibold rounded-3 shadow-sm mt-3">
                <i class="bi bi-box-arrow-in-right me-2"></i>Login
            </button>
        </form>

        @if (ViewBag.Message != null)
        {
            <div class="alert alert-danger mt-3 text-center rounded-3">
                @ViewBag.Message
            </div>
        }

        <div class="text-center mt-4">
            <a href="#" class="text-decoration-none fw-semibold text-primary">Forgot Password?</a>
        </div>
    </div>
</div>

<style>
    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(135deg, #0d6efd, #00b4d8);
    }

    .glass-card {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        transition: transform 0.4s ease, box-shadow 0.4s ease;
    }

        .glass-card:hover {
            transform: scale(1.02);
            box-shadow: 0 0 25px rgba(0, 180, 216, 0.3);
        }

    .btn-gradient {
        background: linear-gradient(90deg, #007bff, #00b4d8);
        border: none;
        color: white;
        transition: 0.3s ease;
    }

        .btn-gradient:hover {
            background: linear-gradient(90deg, #0056b3, #0096c7);
            box-shadow: 0 4px 15px rgba(0, 123, 255, 0.4);
        }

    .form-select, .form-control {
        border-radius: 10px;
        border: 1px solid #ced4da;
    }

    .input-group .btn-outline-secondary {
        border-radius: 0 10px 10px 0;
    }

    .input-group .form-control {
        border-radius: 10px 0 0 10px;
    }

    @@media (max-width: 576px) {
        .card

    {
        padding: 2rem 1.5rem;
    }

    }
</style>

@section Scripts {
    <script>
        // Save username to localStorage
        document.querySelector("form").addEventListener("submit", function () {
            const username = document.querySelector("select[name='username']").value;
            localStorage.setItem("loggedInUser", username);
        });

        // Bootstrap form validation
        (function () {
            'use strict'
            const forms = document.querySelectorAll('.needs-validation')
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        })();

        // Toggle password visibility
        document.getElementById("togglePassword").addEventListener("click", function () {
            const passInput = document.getElementById("passwordInput");
            const icon = this.querySelector("i");
            if (passInput.type === "password") {
                passInput.type = "text";
                icon.classList.replace("bi-eye", "bi-eye-slash");
            } else {
                passInput.type = "password";
                icon.classList.replace("bi-eye-slash", "bi-eye");
            }
        });
    </script>
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet" />
